// Name : Temporary List
// Author : EnderStudios
// Description :

( function (Scratch) {
    "use strict"

    const runtime = Scratch.vm.runtime
    let runtimeList = Object.create(null)

    const getList = (n, util) => { const s = runtime.getTargetForStage(), t = util.target; let listObj = Object.create(null); listObj = s.lookupVariableByNameAndType(n, "list"); if (listObj) return listObj; listObj = t.lookupVariableByNameAndType(n, "list"); if (listObj) return listObj }
    const runtimeListReset = () => { runtimeList = Object.create(null) }

    

    class tempList {
        constructor() {
            Scratch.vm.runtime.on("PROJECT_START", () => { runtimeListReset() } )
            Scratch.vm.runtime.on("PROJECT_STOP_ALL", () => { runtimeListReset() } )
        }
        getInfo() {
            return {
                id: "tempList",
                name: "Temporary List",
                color1: "#FF573A",
                color2: "#bb4c38",
                blocks: [
                    { opcode: "test" }
                ],
                menus: []

            }
        }
        _getLists() { const l = typeof Blockly === "undefined" ? [] : Blockly.getMainWorkspace().getVariableMap().getVariablesOfType("list").map((model) => model.name); return l.length > 0 ? l : [""] }

    }

    Scratch.extensions.register(new tempList())
} ) (Scratch)